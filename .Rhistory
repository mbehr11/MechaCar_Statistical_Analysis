# Generate some fake data to test with
set.seed(42)
set.seed(42)
population1 = rnorm(1000)
population2 = sample(population1, 200)
t.test(population2, mu=mean(population1))
population3 = rnorm(1000, -2)
t.test(population2, mu=mean(population3))
hist(population1)
hist(population2)
library(readr)
sardines <- read_csv("DU-Data Analytics Bootcamp/15-Lessons/2/Activities/03-Stu_Sardines/Resources/sardines.csv")
View(sardines)
subset(sardines,location ==1 )
(sardines,location ==1 )
mu=mean(alaska_sardines)
mu=mean(alaska_sardines)
alaska_sardines<- subset(sardines,location ==1 )
mu=mean(alaska_sardines)
alaska_sardines[2]
alaska_sardines[[2]]
mean(alaska_sardines[[2]])
mean(SanDiego_sardines[[2]])
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
SanDiego_sardines<- subset(sardines,location ==6 )
mean(SanDiego_sardines[[2]])
# Calculate Independent (Two Sample) T-Test
t.test(alaska_sardines[[2]],SanDiego_sardines[[2]])
library(tidyverse)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
library(tidyverse)
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
library(readr)
mosquito <- read_csv("DU-Data Analytics Bootcamp/15-Lessons/2/Activities/04-Ins_ANOVA/Resources/mosquito.csv")
View(mosquito)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
library(readr)
hair <- read_csv("DU-Data Analytics Bootcamp/15-Lessons/2/Activities/05-Stu_ANOVA/Resources/hair.csv")
View(hair)
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
# Read in the CSV file.
hair <- read.csv(file="05-Stu_ANOVA/Resources/hair.csv")
library(readr)
hair <- read_csv("DU-Data Analytics Bootcamp/15-Lessons/2/Activities/05-Stu_ANOVA/Resources/hair.csv")
View(hair)
#  Plot the data using ggplot
ggplot(hair,aes(x=factor(HairColour),y=Pain)) +geom_boxplot()
install.packages("tidyverse")
install.packages("jsonlite")
setwd("~/DU-Data Analytics Bootcamp/R_Analysis")
setwd("~/DU-Data Analytics Bootcamp/R_Analysis/01_Demo")
x <- 3
x <- 5
numlist <- c(0,1,2,3,4,5,6,7,8.9)
csv(file='demo.csv', check.names =F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv', check.names =F,stringsAsFactors = F)
library(jsonlite)
?fromJSON
demo_table2 <- fromJSON(txt='demo.json')
x <- c(3,3,2,2,5,5,8,8,9)
x[3]
demo_table[3,"Year"]
View(demo_table2)
View(demo_table2)
View(demo_table)
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Clas[2]
filter_table <- demo_table2[demo_table2$price >10000,]
View(demo_table2)
View(filter_table)
?subset()
filtr_table2 <-subset(demo_table2, price >10000 & drive == "4wd" & "clean" %in% title_status)
View(filtr_table2)
filter_table2 <-subset(demo_table2, price >10000 & drive == "4wd" & "clean" %in% title_status)
View(filtr_table2)
View(filter_table2)
View(filtr_table2)
View(filtr_table2)
View(filter_table2)
View(filtr_table2)
View(filter_table2)
filter_table3 <- demo_table2["clean"%in% demo_table2$title_status) & (demo_table2$price >10000)& (demo_table2$drive =='4wd'),]
filter_table3 <- demo_table2[("clean"%in% demo_table2$title_status) & (demo_table2$price >10000)& (demo_table2$drive =='4wd'),]
View(filter_table3)
?sample
View(filtr_table2)
View(filtr_table2)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"),4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample(1:nrow(demo_table),3),]
demo_table[sample(1:nrow(demo_table),3),]
demo_table[sample(1:nrow(demo_table),3),]
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <-ggplot(mpg,aes(x=class))
plt <-ggplot(mpg,aes(x=class))
plt +geom_bar()
plt +geom_bar()
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
all.equal(demo_table3,wide_table)
demo_table3 <- read.csv('demo2.csv', check.names = F,stringsAsFactors = F)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
wide_table <- long_table %>% spread(key="Metric",value = "Score")
plt
table <- demo_table3[,order(colnames(wide_table))]
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
wide_table <- long_table %>% spread(key="Metric",value = "Score")
demo_table3 <- read.csv('demo2.csv', check.names = F,stringsAsFactors = F)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
wide_table <- long_table %>% spread(key="Metric",value = "Score")
all.equal(demo_table3,wide_table)
table <- demo_table3[,order(colnames(wide_table))]
plt <-ggplot(mpg,aes(x=class))
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
demo_table3 <- read.csv('demo2.csv', check.names = F,stringsAsFactors = F)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
install.packages(ggplot)
install.packages("ggplot2")
plt <-ggplot(mpg,aes(x=class))
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), Maxium_Price=max(price), Num_Vehicles=n(), .groups = 'keep')
demo_table3 <- read.csv('demo2.csv', check.names = F,stringsAsFactors = F)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
?ggplot
?ggplot()
table <- demo_table3[,order(colnames(wide_table))]
table <- demo_table3[,order(colnames(wide_table))]
source("~/DU-Data Analytics Bootcamp/R_Analysis/01_Demo/demo-1.R")
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
demo_table <- read.csv(file='demo.csv', check.names =F,stringsAsFactors = F)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
x <- c(3,3,2,2,5,5,8,8,9)
x[3]
demo_table[3,"Year"]
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Clas[2]
demo_table[sample(1:nrow(demo_table),3),]
demo_table <- demo_table %>% mutate(Milage_per_Year =Total_Miles/2020-Year),IsActive=TRUE)filter_table <- demo_table2[demo_table2$price >10000,]
filter_table2 <-subset(demo_table2, price >10000 & drive == "4wd" & "clean" %in% title_status)
filter_table3 <- demo_table2[("clean"%in% demo_table2$title_status) & (demo_table2$price >10000)& (demo_table2$drive =='4wd'),]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"),4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
?mutate()
demo_table2 <- fromJSON(txt='demo.json')
demo_table
demo_table
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
x <- c(3,3,2,2,5,5,8,8,9)
x[3]
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Clas[2]
demo_table
View(demo_table2)
demo_table <- read.csv(file='demo.csv', check.names =F,stringsAsFactors = F)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
x <- c(3,3,2,2,5,5,8,8,9)
x[3]
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Clas[2]
demo_table[sample(1:nrow(demo_table),3),]
filter_table2 <-subset(demo_table2, price >10000 & drive == "4wd" & "clean" %in% title_status)
filter_table3 <- demo_table2[("clean"%in% demo_table2$title_status) & (demo_table2$price >10000)& (demo_table2$drive =='4wd'),]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"),4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table2)
library(tidyverse)
?mutate()
demo_table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), Maxium_Price=max(price), Num_Vehicles=n(), .groups = 'keep')
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv', check.names = F,stringsAsFactors = F)
long_table <-gather(demo_table3,key="Metric", value="Score", buying_price:popularity)
wide_table <- long_table %>% spread(key="Metric",value = "Score")
?spreadd()
?spread()
wide_table <- long_table %>% spread(key="Metric",value = "Score")
?ggplot()
all.equal(demo_table3,wide_table)
table <- demo_table3[,order(colnames(wide_table))]
plt <-ggplot(mpg,aes(x=class))
plt +geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), groups= 'keep')
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
plt + geom_col()
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt+ geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plplt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
View(plt)
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
plt + geom_boxplot()  #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1))  #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
> plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
> plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <-ggplot(mpg_summary, aes(x=class,y=Mean_Engine))
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
> plt + geom_boxplot() + #add boxplot
> theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
> geom_point() #overlay scatter plot on top
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
> geom_point()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
theme(axis.text.x=element_text(angle=45,hjust=1))
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot()+theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufactuer,y=hwy))
plt+ geom_boxplot()
plt <-  ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
theme(axis.text.x=element_text(angle = 45,hjust=1))
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt +geom_point(size=4) +labs(x="Vehicle Class",y="Mean Engine Size")
mpg_summary <- mpg %>% = group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups='keep')
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups='keep')
plt <- ggplot(mpg_summary,aes(x=class,y=))
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
>
plt <-ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt+geom_point(size=4)+labs(x="Vehicle Class",y="Mean Engine Size")
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
plt <-ggplot(mpg_long,aes(x=manufacturer,y=Ratings,color=MPG_Type))
plt+geom_boxplot()+theme(axis.text.x=element_text(angle = 45,hjust=1))
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt+geom_boxplot()+theme(axis.text.x=element_text(angle = 45,hjust=1))
?facet_wrap
plt <-ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt+geom_boxplot()+facet_wrap(vars(MPG_Type))
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position= "none")+xlab("Manufactuer")
ggplot(mtcars,aes(x=wt))+ geom_density()
?shapiro.test()
shapiro.test(mtcars$wt)
?sample_n()
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F )
View(population_table)
plt <- ggplot(population_table,aes(x=long10(Miles_Driven)))
plt+geom_density()
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt+ geom_density()
plt <-ggplot(population_table,aes(x=log10(Miles_Driven))
plt <-ggplot(population_table,aes(x=log10(Miles_Driven)))
plt <-ggplot(population_table,aes(x=log10(Miles_Driven)))
plt +geom_density()
sample_table <- population_table %>% sample_n(50)
plt<- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt+ geom_density()
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
library(dplyr)
library(dplyr)
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
setwd("~/DU-Data Analytics Bootcamp/Challenges/MechaCar_Statistical_Analysis")
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
View(mecha_car_df)
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car_df)
summary(mecha_lm)
suspenion_coil_df<-read.csv(file='Suspension_Coil.csv',check.names = =F,stringsAsFactors =F)
suspenion_coil_df<-read.csv(file='Suspension_Coil.csv',check.names = F,stringsAsFactors =F)
View(suspenion_coil_df)
total_summary_df <-(suspenion_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary_df <-suspenion_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary <- suspension_data %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary <- suspension_coil_df %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
suspension_coil_df<-read.csv(file='Suspension_Coil.csv',check.names = F,stringsAsFactors =F)
total_summary <- suspension_coil_df %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
View(total_summary)
lot_summar <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
y <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
lot_summary <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
View(lot_summar)
lot_summary <- suspension_coil_df %>% group_by(Manufacturing_Lot)%>%summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
View(lot_summary)
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
total_summary_df <-suspenion_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car_df)
summary(mecha_lm)
suspension_coil_df<-read.csv(file='Suspension_Coil.csv',check.names = F,stringsAsFactors =F)
total_summary <- suspension_coil_df %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- suspension_coil_df %>% group_by(Manufacturing_Lot)%>%summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
t.test(suspension_coil_df$PSI,mu=1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot1")$PSI,mu=1500)
t.test(subset(suspension_data,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
t.test(subset(suspension_coil_df,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
mpg_data <- read.csv('mpg_modified.csv')
setwd("~/DU-Data Analytics Bootcamp/R_Analysis")
mpg_data <- read.csv('mpg_modified.csv')
setwd("~/DU-Data Analytics Bootcamp/R_Analysis/01_Demo")
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter(year==2008)
View(mpg_2008)
View(mpg_1999)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
?aov
mtcars_filt <- mtcars[,c("hp","cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl,data=mtcars_filt)
summary(aov(hp ~ cyl,data = mtcars_filt))
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter(year==2008)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
mtcars_filt <- mtcars[,c("hp","cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl,data=mtcars_filt)
summary(aov(hp ~ cyl,data = mtcars_filt))
?cor
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + geom_point()
cor(mtcars$hp,mtcars$qsec)
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F)
head(used_cars)
plt <-ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price))
plt + geom_point()
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
used_matrix<- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])
cor(used_matrix)
source("~/DU-Data Analytics Bootcamp/R_Analysis/01_Demo/demo-1.R")
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
setwd("~/DU-Data Analytics Bootcamp/Challenges/MechaCar_Statistical_Analysis")
mecha_car_df<- read.csv(file='MechaCar_mpg.csv', check.names =F,stringsAsFactors = F)
View(mecha_car_df)
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_car_df)
summary(mecha_lm)
View(mecha_lm)
View(mecha_lm)
summary(mecha_lm)
summary(mecha_lm)
suspension_coil_df<-read.csv(file='Suspension_Coil.csv',check.names = F,stringsAsFactors =F)
View(suspension_coil_df)
total_summary <- suspension_coil_df %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary <- suspension_coil_df %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
total_summary <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- suspension_coil_df %>% group_by(Manufacturing_Lot)%>%summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
setwd("~/DU-Data Analytics Bootcamp/Challenges/MechaCar_Statistical_Analysis")
total_summary <- suspension_coil_df %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- suspension_coil_df %>% group_by(Manufacturing_Lot)%>%summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups='keep')
